@using ecomFront.Models.AnalisisViewModels
@using ecomFront.Common

@{
    ViewData["Title"] = "Home Analisis";
    Layout = "_Layout";
}
@model HomeAnalisisViewModel
<!-- Page header -->
<script src="~/assets/js/jquery.mousewheel.min.js"></script>
<script src="~/assets/js/owl.carousel.min.js"></script>
<link href="~/assets/css/owl.carousel.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets/css/owl.theme.default.min.css" rel="stylesheet" type="text/css" />
<div class="page-header page-header-light">
    <div class="page-header-content header-elements-lg-inline">
        <div class="page-title d-flex">
            <a href="#" class="header-elements-toggle text-body d-lg-none"><i class="icon-more"></i></a>
        </div>
        <div class="header-elements d-none">
            <div class="d-flex  order-2 justify-content-center">
                <a asp-area="" asp-controller="Pricing" asp-action="HomePricing" asp-route-executionId="@Model.Execution.IdExecution" class="btn btn-link btn-float font-size-xs font-weight-semibold text-body" style="width:120px">
                    <i class="icon-coin-dollar icon-2x text-teal"></i>
                    <span>Precios</span>
                </a>
                <a asp-area="" asp-controller="Sales" asp-action="HomeSales" asp-route-executionId="@Model.Execution.IdExecution" class="btn btn-link btn-float font-size-xs font-weight-semibold text-body" style="width:120px">
                    <i class="mi-shopping-cart  mi-2x text-teal"></i>
                    <span>Ventas</span>
                </a>
                <a asp-area="" asp-controller="Trend" asp-action="HomeTrend" asp-route-executionId="@Model.Execution.IdExecution" class="btn btn-link btn-float font-size-xs font-weight-semibold text-body" style="width:120px">
                    <i class="mi-trending-up  mi-2x text-teal"></i>
                    <span>Tendencias</span>
                </a>
                <a asp-area="" asp-controller="Seller" asp-action="HomeSellers" asp-route-executionId="@Model.Execution.IdExecution" class="btn btn-link btn-float font-size-xs font-weight-semibold text-body" style="width:120px">
                    <i class="mi-people-outline  mi-2x text-teal"></i>
                    <span>Competidores</span>
                </a>
                <a asp-area="" asp-controller="Listing" asp-action="ListingList" asp-route-executionId="@Model.Execution.IdExecution" class="btn btn-link btn-float font-size-xs font-weight-semibold text-body" style="width:120px">
                    <i class="icon-coin-dollar icon-2x text-teal"></i>
                    <span>PUBLICACIONES</span>
                </a>
            </div>
        </div>
    </div>
    <div class="breadcrumb-line breadcrumb-line-light header-elements-lg-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a asp-area="" asp-controller="Home" asp-action="Index" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                <a asp-area="" asp-controller="Search" asp-action="Searches" class="breadcrumb-item"> Busqueda</a>
                <span class="breadcrumb-item active">@Model.Search.Description</span>
            </div>
            <a href="#" class="header-elements-toggle text-body d-lg-none"><i class="icon-more"></i></a>
        </div>
        <div class="header-elements d-none">
            <div class="breadcrumb justify-content-center">
                <a href="#" class="breadcrumb-elements-item">
                    <i class="icon-comment-discussion mr-2"></i>
                    Necesito Ayuda
                </a>
            </div>
        </div>
    </div>
</div>

<!-- /page header -->
<div class="content">


    @{
        var ventas = Model.Indicadores.FirstOrDefault(i => i.TipoIndicador == IndicatorType.Ventas).Valor;
        var preguntas = Model.Indicadores.FirstOrDefault(i => i.TipoIndicador == IndicatorType.Preguntas).Valor;
        var reviews = Model.Indicadores.FirstOrDefault(i => i.TipoIndicador == IndicatorType.Reviews).Valor;
        var visitas = Model.Indicadores.FirstOrDefault(i => i.TipoIndicador == IndicatorType.Visitas).Valor;
        var publicaciones = Model.Indicadores.FirstOrDefault(i => i.TipoIndicador == IndicatorType.Publicaciones).Valor;
    }
    <div class="row">
        <div class="col-sm-12 col-xl-12">
            <div class="card card-body">
                <div class="row text-center">

                    @if (publicaciones > 0)
                    {
                        var ventasXpublicaciones = ventas / publicaciones;
                        var iconVentasXpublicaciones = "";
                        var colorVentasXPublicaciones = "";
                        if (ventasXpublicaciones > 10)
                        {
                            iconVentasXpublicaciones = "mi-sentiment-very-satisfied";
                            colorVentasXPublicaciones = "text-success";
                        }
                        else if (ventasXpublicaciones > 3)
                        {
                            iconVentasXpublicaciones = "mi-sentiment-satisfied";
                            colorVentasXPublicaciones = "text-primary";
                        }
                        else if (ventasXpublicaciones > 1)
                        {
                            iconVentasXpublicaciones = "mi-sentiment-neutral";
                            colorVentasXPublicaciones = "text-warning";
                        }
                        else
                        {
                            iconVentasXpublicaciones = "mi-sentiment-dissatisfied";
                            colorVentasXPublicaciones = "text-danger";
                        }

                        <div class="col-sm col-xl">
                            <p><i class="@iconVentasXpublicaciones mi-3x @colorVentasXPublicaciones "></i></p>
                            <h5 class="font-weight-semibold mb-0"> @String.Format("{0:#,##0.00}", ventasXpublicaciones)</h5>
                            <span class="text-muted font-size-sm">
                                ventas x publicacion <i class="mi-info-outline icon-4x ml-1 text-primary cursor-pointer" data-popup="tooltip" title data-placement="right" data-html="true" data-original-title="Ventas: @ventas <br/> Publicaciones: @publicaciones"></i>
                            </span>
                        </div>



                        var preguntasXpublicaciones = preguntas / publicaciones;
                        var iconpreguntasXpublicaciones = "";
                        var colorpreguntasXpublicaciones = "";
                        if (preguntasXpublicaciones < 10)
                        {
                            iconpreguntasXpublicaciones = "mi-sentiment-satisfied";
                            colorpreguntasXpublicaciones = "text-primary";
                        }
                        else if (preguntasXpublicaciones < 20)
                        {
                            iconpreguntasXpublicaciones = "mi-sentiment-neutral";
                            colorpreguntasXpublicaciones = "text-warning";
                        }
                        else
                        {
                            iconpreguntasXpublicaciones = "mi-sentiment-dissatisfied";
                            colorpreguntasXpublicaciones = "text-danger";
                        }

                        <div class="col-sm col-xl">
                            <p><i class="@iconpreguntasXpublicaciones mi-3x @colorpreguntasXpublicaciones "></i></p>
                            <h5 class="font-weight-semibold mb-0"> @String.Format("{0:#,##0.00}", preguntasXpublicaciones)</h5>
                            <span class="text-muted font-size-sm">
                                preguntas x publicacion <i class="mi-info-outline icon-4x ml-1 text-primary cursor-pointer" data-popup="tooltip" title data-placement="right" data-html="true" data-original-title="Preguntas: @preguntas <br/> Publicaciones: @publicaciones"></i>
                            </span>
                        </div>

                        <div class="col-sm col-xl">
                            <p><i class="icon-eye2  icon-3x text-indigo "></i></p>
                            <h5 class="font-weight-semibold mb-0"> @String.Format("{0:#,##0.00}", visitas / publicaciones)</h5>
                            <span class="text-muted font-size-sm">
                                visitas x publicacion <i class="mi-info-outline icon-4x ml-1 text-primary cursor-pointer" data-popup="tooltip" title data-placement="right" data-html="true" data-original-title="Visitas: @visitas  <br/> Publicaciones: @publicaciones"></i>

                            </span>
                        </div>
                    }

                    @if (ventas > 0)
                    {
                        var visitasXventas = visitas / ventas;
                        var iconvisitasXventas = "";
                        var colorvisitasXventas = "";
                        if (visitasXventas < 500)
                        {
                            iconvisitasXventas = "mi-sentiment-satisfied";
                            colorvisitasXventas = "text-primary";
                        }
                        else if (visitasXventas < 1000)
                        {
                            iconvisitasXventas = "mi-sentiment-neutral";
                            colorvisitasXventas = "text-warning";
                        }
                        else
                        {
                            iconvisitasXventas = "mi-sentiment-dissatisfied";
                            colorvisitasXventas = "text-danger";
                        }

                        <div class="col-sm col-xl">
                            <p> <i class="@iconvisitasXventas mi-3x @colorvisitasXventas"></i></p>
                            <h5 class="font-weight-semibold mb-0">@String.Format("{0:#,##0.00}", visitasXventas)</h5>
                            <span class="text-muted font-size-sm">
                                visitas x ventas <i class="mi-info-outline icon-4x ml-1 text-primary cursor-pointer" data-popup="tooltip" title data-placement="top" data-html="true" data-original-title="Visitas: @visitas  <br/> Ventas: @ventas"></i>
                            </span>
                        </div>

                        var preguntasXventas = preguntas / ventas;
                        var iconpreguntasXventas = "";
                        var colorpreguntasXventas = "";
                        if (preguntasXventas < 5)
                        {
                            iconpreguntasXventas = "mi-sentiment-very-satisfied";
                            colorpreguntasXventas = "text-success";
                        }
                        else if (preguntasXventas < 20)
                        {
                            iconpreguntasXventas = "mi-sentiment-satisfied";
                            colorpreguntasXventas = "text-primary";
                        }
                        else if (preguntasXventas < 50)
                        {
                            iconpreguntasXventas = "mi-sentiment-neutral";
                            colorpreguntasXventas = "text-warning";
                        }
                        else
                        {
                            iconpreguntasXventas = "mi-sentiment-dissatisfied";
                            colorpreguntasXventas = "text-danger";
                        }

                        <div class="col-sm col-xl">
                            <p> <i class="@iconpreguntasXventas mi-3x @colorpreguntasXventas"></i></p>
                            <h5 class="font-weight-semibold mb-0">@String.Format("{0:#,##0.00}", preguntasXventas)</h5>
                            <span class="text-muted font-size-sm">
                                preguntas x ventas <i class="mi-info-outline icon-4x ml-1 text-primary cursor-pointer" data-popup="tooltip" title data-placement="top" data-html="true" data-original-title="Preguntas: @preguntas <br/> Ventas: @ventas"></i>

                            </span>
                        </div>

                        @if (Model.Search.Criteria.Count() > 1)
                        {
                            <div class="col-sm col-xl">
                                <p></p>
                                <h5 class="font-weight-semibold mb-0">CATEGORIAS</h5>
                                <span class="text-muted font-size-sm">
                                    <span class="text-muted">Ver indicadores por categoria  <i class="mi-keyboard-arrow-right mi-2x text-dark"></i></span>
                                </span>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-sm-8 col-xl-8">
            <div class="card">
                <div class="card-body d-sm-flex align-items-sm-center justify-content-sm-between flex-sm-wrap">
                    <div class="d-flex align-items-center mb-3 mb-sm-0">
                        <div id="groupingInfoShipping1"></div>
                        <div class="ml-3">
                            <h5 class="font-weight-semibold mb-0">Forma de envio</h5>
                            @if (Model.Criteria.Count() > 1)
                            {
                                <div>
                                    <a asp-area="" asp-controller="Analisis" asp-action="GrouppingCategories" asp-route-executionId="@Model.Execution.IdExecution" asp-route-grouping="@GroupingType.ShippingMethod">Detalle Categorias</a>

                                </div>
                            }
                        </div>
                    </div>
                    <div class="d-flex align-items-center mb-3 mb-sm-0">
                        <div id="groupingInfoPaymentMethod1"></div>
                        <div class="ml-3">
                            <h5 class="font-weight-semibold mb-0">Medio de pago</h5>
                            @if (Model.Criteria.Count() > 1)
                            {
                                <div>
                                    <a asp-area="" asp-controller="Analisis" asp-action="GrouppingCategories" asp-route-executionId="@Model.Execution.IdExecution" asp-route-grouping="@GroupingType.PaymentMethod">Detalle Categorias</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div><div class="card">
                <div class="card-header header-elements-sm-inline">
                    <h6 class="card-title">Publicaciones mas relevantes</h6>
                    <div class="header-elements">
                        <a asp-area="" asp-controller="Listing" asp-action="ListingList" asp-route-executionId="@Model.Execution.IdExecution" class="btn btn-link btn-float font-size-xs font-weight-semibold text-body" style="width:120px">Ver todas</a>
                    </div>
                </div><div class="card-body d-sm-flex align-items-sm-center justify-content-sm-between flex-sm-wrap">
                    <div class="table-responsive">
                        <table class="table text-nowrap">
                            <thead>
                                <tr>
                                    <th class="text-center">Titulo </th>
                                    <th class="text-center">Precio </th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Listing)
                                {
                                    <tr>
                                        <td class="text-center">
                                            <a href="@item.Permalink" target="_blank"> @item.Title </a>
                                        </td>
                                        <td class="text-center">
                                            <span class="badge badge-success">$@String.Format("{0:n0}", item.Price)</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @*<div class="table-responsive">
                        <table class="table text-nowrap">
                            <thead>
                                <tr>
                                    <th class="text-center"></th>
                                    <th class="text-center">ID </th>
                                    <th class="text-center">Creada </th>
                                    <th class="text-center">Estado </th>
                                    <th class="text-center">Precio </th>
                                    <th class="text-center">Vendidas </th>
                                    <th class="text-center">Titulo </th>
                                    <th class="text-center">Preguntas </th>
                                    <th class="text-center">Visitas </th>
                                    <th class="text-center">Reviews </th>
                                    <th class="text-center">Tipo </th>
                                    <th class="text-center">Categoria </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Listing)
                                {
                                    <tr>
                                        <td>
                                            <img src="@item.Thumbnail" width=40 height=40 />
                                        </td>
                                        <td>
                                            <a href="@item.Permalink" target="_blank">@item.IdMl</a>
                                        </td>
                                        <td>
                                            @item.DateCreated
                                        </td>
                                        <td>
                                            @if (item.ListingCondition == "new")
                                            {
                                                <span class="badge badge-secondary-100">NUEVO</span>
                                            }
                                            else if (item.ListingCondition == "used")
                                            {
                                                <span class="badge badge-primary-100">USADO</span>
                                            }
                                            else
                                            { <span class="badge badge-indigo-100">DESCONOCIDO</span>}

                                        </td>
                                        <td>
                                            <span class="badge badge-success">$@String.Format("{0:n0}", item.Price)</span>
                                        </td>
                                        <td>
                                            <span class="badge badge-indigo">@item.SoldQuantity</span>
                                        </td>
                                        <td>
                                            @item.Title
                                        </td>
                                        <td>
                                            <span class="badge badge-teal-100">@item.TotalQuestions</span>
                                        </td>
                                        <td>
                                            <span class="badge badge-teal-100">@item.VisitsQuantity</span>
                                        </td>
                                        <td>
                                            <span class="badge badge-teal-100">@item.ReviewsQuantity</span>
                                        </td>
                                        <td>
                                            @if (item.ListingTypeId == "gold_pro" || item.ListingTypeId == "gold_premium")
                                            {
                                                <span class="badge badge-warning">PREMIUM</span>
                                            }
                                            else if (item.ListingTypeId == "gold_special" || item.ListingTypeId == "gold")
                                            {
                                                <span class="badge badge-yellow ">CLASICA</span>
                                            }
                                            else if (item.ListingTypeId == "free")
                                            {
                                                <span class="badge badge-light">GRATUITA</span>
                                            }
                                            else
                                            { <span class="badge badge-transparent">DESCONOCIDO</span>}
                                        </td>
                                        <td>
                                            @item.Category.Nameml
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>*@
            </div>

        </div>
        <div class="col-sm-4 col-xl-4">
            <div class="card">
                <div class="card-body text-center">
                    <div class="svg-center" id="funnelExecution" style="height:300px;"></div>
                </div>
            </div>
            <div class="card">
                <div class="card-header header-elements-sm-inline">
                    <h6 class="card-title">Palabras clave</h6>
                    <div class="header-elements">
                        <a asp-area="" asp-controller="Trend" asp-action="HomeTrend" asp-route-executionId="@Model.Execution.IdExecution" class="btn btn-link btn-float font-size-xs font-weight-semibold text-body" style="width:120px">Ver detalle</a>
                    </div>
                </div><div class="card-body d-sm-flex align-items-sm-center justify-content-sm-between flex-sm-wrap">
                    <div class="table-responsive">
                        <table class="table text-nowrap">
                            <thead>
                                <tr>
                                    <th class="text-center">#</th>
                                    <th class="text-center">Palabra </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ int i = 0;
                                }
                                @foreach (var item in Model.Words)
                                {
                                    i = i + 1;
                                    <tr>
                                        <td class="text-center">
                                            @i
                                        </td>
                                        <td class="text-center">
                                            @item.Palabra
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm col-xl">
            <div class="card">
                <div class="card-header header-elements-sm-inline">
                    <h6 class="card-title">Imágenes de las publicaciones relevantes</h6>
                </div>
                <div class="card-body text-center">
                    <div class="owl-carousel">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
            {
    <script type="text/javascript">
                document.addEventListener('DOMContentLoaded', function () {
                    _showGroupingInfoPaymentMethod();
                    _showGroupingInfoShippingMethod();
                    _showFunnel();
                    @foreach (var item in Model.Listing)
                    {
                         <text>GetImagenesPublicaciones("@item.IdMl");</text>

                    }
                    setTimeout(function () {
                        var owl = $('.owl-carousel');
                        owl.owlCarousel({
                            loop: true,
                            nav: true,
                            margin: 10,
                            responsive: {
                                0: {
                                    items: 1
                                },
                                600: {
                                    items: 3
                                },
                                960: {
                                    items: 5
                                },
                                1200: {
                                    items: 6
                                }
                            }
                        });
                        owl.on('mousewheel', '.owl-stage', function (e) {
                            if (e.deltaY > 0) {
                                owl.trigger('next.owl');
                            } else {
                                owl.trigger('prev.owl');
                            }
                            e.preventDefault();
                        });
                    }, 1000);
                   
                    //_progressArcSingle("#arc_single", 78, '#29B6F6', 0, 100, 70);
                });

                var _showGroupingInfoPaymentMethod = function (element, size) {
                    $.post('/Analisis/GetGroupingInfoPaymentMethod', { executionId: @Model.Execution.IdExecution })
                        .done(function (data) {
                            var info = []
                            $.each(data, function (key, value) {
                                var itemInfo = {
                                    status: value.clasification,
                                    value: value.qtty,
                                    color: colores[key]
                                };
                                info.push(itemInfo);
                            })

                            //_donutWithDetails("#groupingInfoPaymentMethod", 146, info);
                            _DashboardDonutChart("groupingInfoPaymentMethod1", 50, info);
                        })
                        .fail(function (e) {
                            $.jGrowl(e.responseText, { theme: 'growl-error', header: ' ERROR ', life: 3000 });
                        });
                }

                var _showGroupingInfoShippingMethod = function (element, size) {
                    $.post('/Analisis/GetGroupingInfoShippingMethod', { executionId: @Model.Execution.IdExecution })
                        .done(function (data) {
                            var info = []
                            $.each(data, function (key, value) {
                                var itemInfo = {
                                    status: value.clasification,
                                    value: value.qtty,
                                    color: colores[key]
                                };
                                info.push(itemInfo);
                            })

                           // _donutWithDetails("#groupingInfoShipping", 146, info);
                            _DashboardDonutChart("groupingInfoShipping1", 50, info);
                        })
                        .fail(function (e) {
                            $.jGrowl(e.responseText, { theme: 'growl-error', header: ' ERROR ', life: 3000 });
                        });
                }

                var _showFunnel = function (element, size) {
                    $.post('/Analisis/GetFunnelData', { executionId: @Model.Execution.IdExecution })
                        .done(function (data) {
                            var dataLegend = [];
                            var dataSeries = [];
                            var valuesInd = {};
                            $.each(data, function (key, value) {
                                dataLegend.push(value.tipoIndicador);
                                var itemInfo = {
                                    value: getValorEmbudo(value.tipoIndicador),
                                    cantidad: value.valor,
                                    name: value.tipoIndicador
                                };
                                dataSeries.push(itemInfo);
                                valuesInd[value.tipoIndicador] = value.valor
                            })

                            _funnelBasicLightExample("funnelExecution", dataSeries, dataLegend, valuesInd);
                        })
                        .fail(function (e) {
                            $.jGrowl(e.responseText, { theme: 'growl-error', header: ' ERROR ', life: 3000 });
                        });
                }

                function getValorEmbudo(tipo) {
                    if (tipo == "VISITAS")
                        return 75;
                    if (tipo == "PREGUNTAS")
                        return 50;
                    if (tipo == "VENTAS")
                        return 25;
                    return 0;
                }

                function GetImagenesPublicaciones(idML) {
                    $.getJSON('https://api.mercadolibre.com/items/' + idML)
                        .done(function (json_data) {
                            if (json_data) {
                                if (json_data.pictures) {
                                    for (var i = 0; i <= 1; i++) {
                                        $(".owl-carousel").append("<div><img src='" + json_data.pictures[i].url + "'></img></div>");
                                    }
                                }
                            }
                        });
                }

    </script>
}
